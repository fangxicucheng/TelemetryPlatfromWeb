server:
  port: 8083
spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  data:
#   redis:
#    cluster:
#      nodes:
#        - 192.168.179.132:6379
#        - 192.168.179.132:6380
#        - 192.168.179.132:6381
#        - 192.168.179.132:6382
#        - 192.168.179.132:6383
#        - 192.168.179.132:6384
#      max-redirects: 3
#    lettuce:
#      pool:
#        min-idle: 1
#        max-idle: 2
#        max-wait: 10ms
#        max-active: 32
#      cluster:
#        refresh:
#          adaptive: true
#          period: 2000
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
  datasource:
    mysqlsource:
      jdbc-url: jdbc:mysql://127.0.0.1:3306/telemetry_data?useSSL=false&serverTimezone=UTC&useUnicode=true&allowPublicKeyRetrieval=true&characterEncoding=utf8
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: 123456
    postgresqlsource:
      jdbc-url: jdbc:postgresql://127.0.0.1:5432/telemetry
      driver-class-name: org.postgresql.Driver
      username: postgres
      password: 123456
  kafka:
   bootstrap-servers: localhost:9092
   producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer

#  kafka:
#    bootstrap-servers: hadoop1:9092,hadoop2:9092,hadoop3:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      acks: 0
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
gorit:
  file:
    root:
      path: D:\卫星遥测数据监控平台\
